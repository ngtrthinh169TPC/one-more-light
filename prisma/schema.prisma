datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String  @id @default(cuid())
  email       String  @unique
  displayName String? @unique

  role String @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  notes        Note[]
  createdBlogs Blog[]    @relation("creator")
  editedBlogs  Blog[]    @relation("editor")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Blog {
  id    String @id @default(cuid())
  title String
  type  String
  body  String

  viewCount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy User    @relation("creator", fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String
  editedBy  User?   @relation("editor", fields: [editorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  editorId  String?

  TagOnBlog TagOnBlog[]
}

model Tag {
  id          String @id @default(cuid())
  name        String
  description String

  TagOnBlog TagOnBlog[]
}

model TagOnBlog {
  blog   Blog   @relation(fields: [blogId], references: [id])
  blogId String

  tag   Tag    @relation(fields: [tagId], references: [id])
  tagId String

  @@id([blogId, tagId])
}
